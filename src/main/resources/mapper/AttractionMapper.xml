<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.enjoytrip.attraction.dao.AttractionMapper">
    <update id="setFavorite" >
        UPDATE user
            JOIN (
            SELECT a.category
            FROM attraction a
            JOIN (
            SELECT attraction_id, AVG(score) AS avg_score
            FROM attraction_review
            WHERE user_id = #{userId}
            GROUP BY attraction_id
            ORDER BY avg_score DESC
            LIMIT 1
            ) AS subquery ON a.id = subquery.attraction_id
            ) AS category_result ON 1 = 1
            SET user.favorite = category_result.category
        WHERE user.id = #{userId};
    </update>
    <select id="getRecommend" resultType="com.enjoytrip.attraction.dto.AttractionListResDto">
        SELECT a.*,
               COALESCE(x.reviewsCount, 0) AS reviewsCount,
               COALESCE(x.score, 0)        AS score
        FROM attraction a
                 LEFT OUTER JOIN (SELECT attraction_id,
                                         COUNT(*)   AS reviewsCount,
                                         AVG(score) AS score
                                  FROM attraction_review
                                  GROUP BY attraction_id) x ON a.id = x.attraction_id
        WHERE a.category = (
            SELECT favorite
            FROM user
            WHERE id = #{userId}
        )
        ORDER BY x.score DESC, x.reviewsCount DESC
            LIMIT 3
    </select>
    <select id="getHotAttraction" resultType="com.enjoytrip.attraction.dto.AttractionListResDto">
        SELECT a.id,
               a.category,
               a.category_mean             AS categoryMean,
               a.attraction_name           AS attractionName,
               a.address,
               a.attraction_image_url      AS attractionImageUrl,
               a.sido_code                 AS sidoCode,
               a.gugun_code                AS gugunCode,
               COALESCE(x.reviewsCount, 0) AS reviewsCount,
               COALESCE(x.score, 0)        AS score
        FROM attraction a
                 LEFT OUTER JOIN (SELECT attraction_id,
                                         COUNT(*)   AS reviewsCount,
                                         AVG(score) AS score
                                  FROM attraction_review
                                  GROUP BY attraction_id) x ON a.id = x.attraction_id
        ORDER BY x.score DESC
            LIMIT 1

    </select>

    <select id="search" parameterType="com.enjoytrip.attraction.dto.AttractionSearchOptionsDto"
            resultType="com.enjoytrip.attraction.dto.AttractionListResDto">

        SELECT
        a.id,
        a.category,
        a.category_mean AS categoryMean,
        a.attraction_name AS attractionName,
        a.address,
        a.attraction_image_url AS attractionImageUrl,
        a.sido_code AS sidoCode,
        a.gugun_code AS gugunCode,
        COALESCE(x.reviewsCount, 0) AS reviewsCount,
        COALESCE(x.score, 0) AS score
        FROM
        attraction a
        LEFT OUTER JOIN (
        SELECT
        attraction_id,
        COUNT(*) AS reviewsCount,
        AVG(score) AS score
        FROM
        attraction_review
        GROUP BY
        attraction_id
        ) x ON a.id = x.attraction_id

        <where>
            <if test="category != null">
                AND category = #{category}
            </if>
            <if test="sidoCode != null">
                AND sido_code = #{sidoCode}
            </if>
            <if test="gugunCode != null">
                AND gugun_code = #{gugunCode}
            </if>
            <if test="title != null">
                AND attraction_name LIKE CONCAT('%', #{title}, '%')
            </if>
        </where>

        LIMIT #{limit} OFFSET #{offset}
    </select>
    <select id="getDetail"
            resultType="com.enjoytrip.attraction.dto.AttractionDetailResDto">
        SELECT
            a.id,
            a.category,
            a.category_mean AS categoryMean,
            a.attraction_name AS attractionName,
            a.address,
            a.attraction_image_url AS attractionImageUrl,
            d.overview AS description,
            COALESCE(x.reviewsCount, 0) AS reviewsCount,
            COALESCE(x.score, 0) AS score
        FROM
            attraction a
                LEFT JOIN (
                SELECT
                    attraction_id,
                    COUNT(*) AS reviewsCount,
                    AVG(score) AS score
                FROM
                    attraction_review
                GROUP BY
                    attraction_id
            ) x ON a.id = x.attraction_id
                LEFT JOIN attraction_description d ON a.id = d.attraction_id
        WHERE a.id = #{attractionId}

    </select>
    <select id="getGugun" resultType="com.enjoytrip.attraction.dto.AttractionGugunDto">
        select gugun_code AS gugunCode, gugun_name AS gugunName
        from gugun
        where sido_code = #{sidoCode}
    </select>
</mapper>